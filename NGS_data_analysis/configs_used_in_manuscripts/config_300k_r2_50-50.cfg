

###############################################################################
# uASPIRE                                                                     #
# Simon Höllerer, ETH Zürich, D-BSSE, BPL, Basel, Switzerland                 #
# Config file for NGS raw data analysis                                       #
# Author: Simon Höllerer                                                      #
# Date: November, 2019                                                        #
###############################################################################

# DESCRIPTION: This is the configuration file for the NGS raw data analysis of
# uASPIre. In order to execute the script successfully, there needs to be a
# specified root folder with one subfolders named 'code'. After setting all 
# parameters in the config file, the script can be executed by calling
# >>> /path/to/script/main_process_raw_NGS_data.sh /path/to/config.cfg


############ Program parameters ############
# Set project name
PROJECT_NAME=SH17N_300k_r2_50-50

# Specify root path as the desired working folder
ROOT_PATH=/home/hoelsimo/02_Sequencing/NGS/SH17N_300k_r2_50-50

# Specify full path file name of compressed raw files R1 (fwd) and R2 (rev)
IN_FILE_R1=${ROOT_PATH}/raw_data/BSSE_QGF_120555_HGFMGBGXB_1_SH250k_r1_S1_R1_001_MM_1.fastq.gz
IN_FILE_R2=${ROOT_PATH}/raw_data/BSSE_QGF_120555_HGFMGBGXB_1_SH250k_r1_S1_R2_001_MM_1.fastq.gz

# Specify agrep and tre-agrep file location
AGREP=/home/hoelsimo/opt/agrep/agrep
TRE=/home/hoelsimo/opt/tre-0.8.0/bin/agrep

# Define number of parallel tasks
PARALLEL_TASKS=1



############ Analysis parameters ############
# Define barcode combinations
SAMPLES_BC="11"
SAMPLES_NUMBER=1

# Define sample time points
SAMPLES_TIME_POINTS="50"

# Define barcode sequences for left and right barcodes and barcode ID
BARCODES_L=(GCCAAT)
BARCODES_R=(GCCAAT)

# Define constant sequence
SEQ_CONSTANT=GAGCTCGCAT

# Define non-flipped (SEQ_NF) and flipped (SEQ_FF) sequence
SEQ_NF=GGGTTTGTACCGTACAC
SEQ_FF=GCCCGGATGATCCTGAC

# Define allowed mismatches for constant, BC, non-flipped and flipped sequence
MM_CONSTANT=3
MM_BC=1
MM_NF=3
MM_FF=3

# Define RBS length and offset # <------------------- offset from where?
RBS_LENGTH=17
RBS_OFFSET=6

# Define to write last X bases for discriminator search starting on 13
LAST=24



############ Obsolete? ############
# Define cutoffs
CUTOFF_OVERALL=1



############ Functional parameters - should not be changed! ############
# specify the names of single scripts (if other than default)
NAME_SCRIPT_0=0_gunzip.sh
NAME_SCRIPT_1=1_QC_constant_par.sh
NAME_SCRIPT_2=2_retrieve_constant_par.py
NAME_SCRIPT_3=3_BC_discriminator_par.sh
NAME_SCRIPT_4=4_samples_RBS_par.py
NAME_SCRIPT_5=5_RBS_sequence_par.sh
NAME_SCRIPT_6=6_cat.sh
NAME_SCRIPT_7=7_cal_parse_print.py

# various paths
OUT_PATH=${ROOT_PATH}/output
RESULT_PATH=${ROOT_PATH}/results
LOG_PATH=${ROOT_PATH}/log

# variour variables
# SAMPLES_NUMBER=${#SAMPLES_BC[@]} <- does not work that way in bash
BARCODES_NUMBER=${#BARCODES_L[@]}

# paths to the single scripts (if other than default)
SCRIPT_0=./executables/${NAME_SCRIPT_0}
SCRIPT_1=./executables/${NAME_SCRIPT_1}
SCRIPT_2=./executables/${NAME_SCRIPT_2}
SCRIPT_3=./executables/${NAME_SCRIPT_3}
SCRIPT_4=./executables/${NAME_SCRIPT_4}
SCRIPT_5=./executables/${NAME_SCRIPT_5}
SCRIPT_6=./executables/${NAME_SCRIPT_6}
SCRIPT_7=./executables/${NAME_SCRIPT_7}

# define timestamp functions
timestamp()
{
 date +"%Y-%m-%d %T"
}
