#!/bin/bash

###############################################################################
# uASPIRE                                                                     #
# Configuration file for NGS raw data analysis                                #
# Simon Höllerer, ETH Zürich, D-BSSE, BPL, Basel, Switzerland                 #
# E-mail: simon.hoellerer@bsse.ethz.ch                                        #
# Authors: Simon Höllerer and Laetitia Papaxanthos                            #
# Date: January, 2020                                                         #
###############################################################################
#
# DESCRIPTION: This is the configuration file for the NGS raw data analysis of
# uASPIRE. In order to execute the script successfully, please specify location
# and names of your files and executables. After setting all parameters here in
# this file, the script can be executed by calling the following command:
# >>> /path/to/main_process_raw_NGS_data.sh /path/to/config.cfg


############ Program parameters ############
# Set project name
PROJECT_NAME="SH17N_250k_r2"

# Specify root working directory
ROOT_DIR="/home/hoelsimo/02_Sequencing/NGS/SH17N_250k_r2"

# Specify full path file name of compressed raw files R1 (fwd) and R2 (rev)
RAW_R1="${ROOT_DIR}/raw_data/BSSE_QGF_112858_HHKV3BGX9_1_SH17N_250k_r2_S1_R1_001_MM_1.fastq.gz"
RAW_R2="${ROOT_DIR}/raw_data/BSSE_QGF_112858_HHKV3BGX9_1_SH17N_250k_r2_S1_R2_001_MM_1.fastq.gz"

# Specify directory of executables
EXE_DIR="/home/hoelsimo/gitlab/uaspire_rbs/NGS_raw_data_analysis/executables"

# Specify agrep and tre-agrep file location
AGREP="/home/hoelsimo/opt/agrep/agrep"
TRE="/home/hoelsimo/opt/tre-0.8.0/bin/agrep"

# Define number of parallel tasks to be executed
PARALLEL_TASKS=12



############ Analysis parameters ############
# Define sequences of left and right barcodes
BC_L=(ATCACG CGATGT CTTGTA GCCAAT ACAGTG ACTTGA)
BC_R=(ATCACG CGATGT CTTGTA GCCAAT ACAGTG ACTTGA)

# Define barcode combinations and number of samples
SAMPLES_BC="16 25 34 43 52 61 15 24 33"
SAMPLES_NR=9

# Define sample time points
SAMPLES_TP="0 50 95 155 225 290 360 480 720"

# Define constant sequence
SEQ_CO=GAGCTCGCAT

# Define non-flipped (NF) and flipped (FF) sequence
SEQ_NF=GGGTTTGTACCGTACAC
SEQ_FF=GCCCGGATGATCCTGAC

# Define allowed mismatches for constant, BC, non-flipped and flipped sequence
MM_CO=2
MM_BC=1
MM_NF=2
MM_FF=2

# Define RBS length and offset # <------------------- offset from where?
RBS_LENGTH=17
RBS_OFFSET=7

# Define last X bases to write for discriminator search starting on position 13
LAST=24



############ Functional parameters - should not be changed ############
# Specify the names of single scripts (if other than default)
NAME_EXE_0="0_gunzip.sh"
NAME_EXE_1="1_QC_constant.sh"
NAME_EXE_2="2_retrieve_constant.py"
NAME_EXE_3="3_BC_discriminator.sh"
NAME_EXE_4="4_samples_RBS.py"
NAME_EXE_5="5_RBS_sequence.sh"
NAME_EXE_6="6_cat.sh"
NAME_EXE_7="7_cal_parse_print.py"

# Other paths
OUT_DIR="${ROOT_DIR}/output"
RESULT_DIR="${ROOT_DIR}/results"
LOG_DIR="${ROOT_DIR}/log"

# Other variables
BC_NR=${#BC_L[@]}

# Paths to the single scripts (if other than default)
EXE_0_gunzip="${EXE_DIR}/${NAME_EXE_0}"
EXE_1_QC_constant="${EXE_DIR}/${NAME_EXE_1}"
EXE_2_retrieve_constant="${EXE_DIR}/${NAME_EXE_2}"
EXE_3_BC_discriminator="${EXE_DIR}/${NAME_EXE_3}"
EXE_4_samples_RBS="${EXE_DIR}/${NAME_EXE_4}"
EXE_5_RBS_sequence.sh="${EXE_DIR}/${NAME_EXE_5}"
EXE_6_cat.sh="${EXE_DIR}/${NAME_EXE_6}"
EXE_7_cal_parse_print.py="${EXE_DIR}/${NAME_EXE_7}"

# Define timestamp functions
timestamp()
{
 date +"%Y-%m-%d %T"
}
